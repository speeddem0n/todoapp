basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.TodoList'
        type: array
    type: object
  handler.signInInput:
    properties:
      password:
        description: Пароль
        type: string
      username:
        description: Имя пользователя
        type: string
    required:
    - password
    - username
    type: object
  models.CreateListInput:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  models.CreateTodoItemInp:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    required:
    - title
    type: object
  models.ListItem:
    properties:
      id:
        type: integer
      itemId:
        type: integer
      listId:
        type: integer
    type: object
  models.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  models.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  models.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  models.UpdateListInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      name:
        description: Тег building Валидирует наличие данного поля в теле запроса
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete list item using itemID
      parameters:
      - description: item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete List Item By Id
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Get list item using itemID
      parameters:
      - description: item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Item By Id
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update list item using itemID
      parameters:
      - description: Update item input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateItemInput'
      - description: item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update List item By Id
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: Get all user lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: Create new todo list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateListInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: Delete list using listID
      parameters:
      - description: list ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete List By Id
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: Get list using listID
      parameters:
      - description: list ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: Update list using listID
      parameters:
      - description: Update Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateListInput'
      - description: list ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update List By Id
      tags:
      - lists
  /api/lists/{id}/items:
    get:
      consumes:
      - application/json
      description: Get All todo list items
      parameters:
      - description: list ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create new todo list item
      parameters:
      - description: list ID
        in: path
        name: id
        required: true
        type: integer
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateTodoItemInp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: username and passwor
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create new account
      parameters:
      - description: Account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
